[{"title":"Android Studio升级3.1.2后提示“Configuration on demand is not supported by the current version of the Android Gradle plugin”的解决方法","date":"2018-05-18T02:18:28.000Z","path":"2018/05/18/Android Studio升级3.1.2 后提示“Configuration on demand is not supported by the current version of the Android Gradle plugin  ”的解决方法/","text":"Configuration on demand is not supported by the current version of the Android Gradle plugin Android Studio 升级3.1.2 后提示“Configuration on demand is not supported by the current version of the Android Gradle plugin ”的解决方法Android Studio 升级后3.1.2 后提示： Configuration on demand is not supported by the current version of the Android Gradle plugin since you are using Gradle version 4.6 or above. Suggestion: disable configuration on demand by setting org.gradle.configureondemand=false in your gradle.properties file or use a Gradle version less than 4.6. 按照提示设置后发现并没有什么卵用，搜了一圈都在说需要降级，实在懒得降级，最后在stackoverflow上找了个方法，试了下，居然成了，这里给大家分享一下： 第一步，删除gradle.properties 中的org.gradle.configureondemand 第二部，打开File &gt; Settings &gt; Build, Execution, Deployment &gt; Compiler 取消需要的配置。 第三部，成功。"},{"title":"python更新","date":"2018-05-16T02:59:32.000Z","path":"2018/05/16/python 更新/","text":"python 更新升级pip： python -m pip install --upgrade pip 列出刻更新的包： pip list --outdate 升级指定包(例如：requests)： pip install --upgrade requests 批量升级所有包： 方式1，循环执行pip install –upgrade： import pip from subprocess import call for dist in pip.get_installed_distributions(): call(&quot;pip install --upgrade &quot;+dist.project_name, shell=True) 方式2，安装pip-review包 pip-review --local --interactive"},{"title":"python 使用pyqt进行gui开发","date":"2018-04-07T06:18:28.000Z","path":"2018/04/07/python-使用pyqt进行gui开发/","text":"python 使用pyqt进行gui开发开发环境：MAC OS 10.12.3 版本 （当前最新）Pycharm 2016.3.2 版本 （当前最新）Python 3.6.0 版本 （当前最新）PyQt5 5.8.1 版本 （当前最新）pyinstaller：将python代码打包为可执行的exe文件。 exe文件给Windows用，但是本章不安装，但是不排除后期更新文章，因为博主还没入门，还没考虑这么多！！！“囧”) 为什么写这篇博客？尼玛是资料太少（几乎没有完整的），花了1整天时间来配置，不希望大家也浪费，时间是金钱买不来的。 需要安装哪些东西呢？ sip PyQt5 Qt python python不会安装的可以参考Python版本管理：pyenv和pyenv-virtualenv Pycharm 安装自行百度，很简单，一路点击下一步。 sip 意思是说：在从源代码构建PyQt5之前，您必须已经构建并安装了SIP，就是说你必须要安装这个东西，那么这个东西是什么呢？ 什么是sip？sip是RiverBank（也就是PyQt的开发商）开发的用于PyQt的Python/C++混合编程解决方案。由于Qt框架的复杂性，PyQt并没有使用Cython、SWIG的混合编程方案，而是自己单独做了一套框架。sip包括一个sip工具、SDK和Python Module。 与SWIG类似，使用sip也需要先编写一个『配置文件』，然后使用sip工具『编译』为C++源文件，最后，和Qt库一起编译形成适用于Python的PyQt。 与SWIG不同的是，sip同时以Python Module的形式存在，也就是说，作为Python Module的PyQt，依赖于作为Python Module的sip。而对于SWIG，一旦自动生成的C++生成完毕，整个流程就不再依赖SWIG了。 需要注意：如果你安装了PyQt4和PyQt5，那么PyQt4和PyQt5无法共享sip。就像 Python2 和 Python3 严格说不能共享pip 一样，因为有差异，解决方案就是给每个目录配置独立的Python环境（virtualenv），可以参考Python版本管理：pyenv和pyenv-virtualenv。 安装sip方式一：pip安装使用支持的Python版本，你可以从PyPi安装SIP 通过运行： pip3 install SIP 喜欢动手的可以试试下面的方式四，目前网上找到的教程都用自己编译的方式。如果是mac可以用户使用方式三，也很简单，但是python 的环境就不容易隔离开了，不建议。 方式二：pycharm安装考虑懒癌患者，可以使用pycharm 方式三：使用Homebrewbrew install sip 不知道brew 的自行百度哈。 方式四：手动编译安装选择这种方式的都是大神。😁当开始编译后，后面的步骤最好也是“手动编译”。 下载地址：https://sourceforge.net/projects/pyqt/files/sip/sip-4.19.1/sip-4.19.1.tar.gz用于64位Linux，OS X和32位和64位Windows的Python v3.5及更高版本。 编译安装步骤tar xvf sip-4.19.1.tar.gzcd sip-4.19.1python3.5 configure.py -d /Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packagesmakesudo make install 手动编译参考：http://www.cnblogs.com/tkinter/p/5632231.html 安装PyQt5方式一：pip安装使用支持的Python版本，你可以从PyPi安装SIP 通过运行： pip3 install PyQt5 喜欢动手的可以试试下面的方式四，目前网上找到的教程都用自己编译的方式，哈哈。如果是mac可以用户使用方式三，也很简单，但是python 的环境就不容易隔离开了，不建议。 方式二：pycharm安装 方式三：使用Homebrewbrew install pyqt 方式四：手动编译安装下载地址：https://www.riverbankcomputing.com/software/pyqt/download5https://sourceforge.net/projects/pyqt/files/PyQt5/PyQt-5.8.1/PyQt5_gpl-5.8.1.tar.gz二进制包提供用于64位Linux，OS X和32位和64位Windows的Python v3.5及更高版本。 手动编译参考：http://www.cnblogs.com/tkinter/p/5632231.html 注意：到此为止其实已经可以开发了，但是我们想要更爽的开发，可以直接拖动控件，所以需要QtDesigner，QtDesigner是QT的一个模块。 安装Qt安装很简单，一路下一步，不用配置什么，默认的配置即可，我们只是用Qt的QtDesigner可执行程序，最后不用启动，直接关闭就行。 方式一：本地安装http://download.qt.io/official_releases/qt/5.8/5.8.0/qt-opensource-mac-x64-clang-5.8.0.dmghttp://download.qt.io/official_releases/qt/5.8/5.8.0/qt-opensource-linux-x64-5.8.0.runhttp://download.qt.io/official_releases/qt/5.8/5.8.0/qt-opensource-windows-x86-msvc2015_64-5.8.0.exe 这是我安装后的路径，其实最后就是要QtDesigner 方式二：使用Homebrewbrew install qt 安装是命令行，不是可视化的点击下一步，我没有用这种方式。 注意：到这里需要安装的都安装完成了，下面需要把所以安装的东西配置起来。 配置QtDesigner可视化的拖控件写UI，一个字爽！ 打开你的pycharm windows的配置截图： image.png 配置PyUIC用于把QtDesigner创建的UI文件转换成py文件。 Paramters里面的内容： -m PyQt5.uic.pyuic $FileName$ -o $FileNameWithoutExtension$.py 配置完毕。可以看到多了两个外部工具： 如何使用：mac 做的gif 只能播放一次，不知道咋回事，只能苦逼的一张图片一张的截图了😢。 创建第一个pyqt项目：打开我们的QtDesigner，我们就可以写布局了。 启动了Designer程序，我们就可以拖控件了。我们创建窗口程序，选择Man Window，让后点击create。 点击create后，会出现画布和控件 拖动一个文本写点内容： 保存布局文件。 选择保存路径 此时在项目下可以看到这个文件了。 但是这个文件python不能直接运行啊，咋办？此时需要我们上面配置的另一个工具了PyUIC。 选中文件右键，选择我们之前配置的PyUIC 这个命令行工具就会把UI文件转成py文件。 启动这个python文件，我们需要调用它： 编写 main.py: 代码如下： import sys import HelloWorld from PyQt5.QtWidgets import QApplication, QMainWindow if __name__ == &#39;__main__&#39;: app = QApplication(sys.argv) MainWindow = QMainWindow() ui = HelloWorld.Ui_MainWindow() ui.setupUi(MainWindow) MainWindow.show() sys.exit(app.exec_()) 如何运行: 运行结果： 哦也，终于写出来第一个python的GUI程序！"},{"title":"android studio中找不到“sync the project with gradle files”按钮时的操作","date":"2018-01-12T09:45:46.000Z","path":"2018/01/12/android studio中找不到“sync the project with gradle files”按钮时的操作/","text":"android studio中找不到“sync the project with gradle files”按钮时的操作 打开Gradle工具窗口 View -&gt; Tool Windows -&gt; Gradle 使用开始宏录制 Edit -&gt; Macros -&gt; Start Recording Macro 在Gradle工具窗口中按下Refresh all Gradle projects按钮 用宏停止宏录制 Edit -&gt; Macros -&gt; Stop Recording Macro 用名字保存宏 Gradle sync 在IntelliJ IDEA工具栏上用鼠标右键按下并选择 Customize Menus and Toolbars... 在Main menu -&gt; Edit -&gt; Macros -&gt; Macro Actions找到您的Gradle sync宏，选择它，然后按Edit Action Icon... 下载此图标同步项目与Gradle文件图标（从文档http://developer.android.com/google/play-services/setup.html），并在IDEA对话框窗口中选择此图标 现在在组中Menus and Toolbars选择最后一项Main Toolbar，按Add After...并选择All actions -&gt; Macros -&gt; Gradle sync 现在你有Sync Project with Gradle Files按钮！"}]